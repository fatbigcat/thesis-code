generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ENUMS

enum AuthorType {
  PROFESSOR
  AI
  STUDENT
  IMPORTED
}

enum GraderType {
  PROFESSOR
  AI
  IMPORTED
}

// MODELS

model Essay {
  id          Int          @id @default(autoincrement())
  title       String
  author      String
  content     String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  scanUrl     String?      //optional: link to scanned original essay file
  annotations Annotation[]
  grades      Grade[]
  instruction Instruction  @relation(fields: [instructionId], references: [id])
  instructionId Int
}

model Annotation {
  id          Int        @id @default(autoincrement())
  essay       Essay      @relation(fields: [essayId], references: [id])
  essayId     Int
  type        String     //"comment", "correction", "AI"
  startOffset Int
  endOffset   Int
  content     String
  modelVersion String?
  authorType  AuthorType
  color       String?
  confidence  Float?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Instruction {
  id        Int        @id @default(autoincrement())
  type      String     //"argumentative" | "interpretative"
  theme     String
  title     String
  prompt    String
  time      String
  criteria  Criterion[]
  essays    Essay[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Criterion {
  id                Int        @id @default(autoincrement())
  instruction       Instruction @relation(fields: [instructionId], references: [id])
  instructionId     Int
  label             String     // "A", "B", "C", "D"
  title             String
  details           String
  scoringGuidelines String
  taxonomyLevel     String
  parent            String?    // nullable
  specifications    Specification[]
  grades            Grade[]
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}

model Specification {
  id            Int       @id @default(autoincrement())
  criterion     Criterion @relation(fields: [criterionId], references: [id])
  criterionId   Int
  label         String    //"A", "B", "C", "D"
  title         String
  details       String
  maxPoints     Int
  taxonomyLevel String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Grade {
  id          Int         @id @default(autoincrement())
  essay       Essay       @relation(fields: [essayId], references: [id])
  essayId     Int
  criterion   Criterion   @relation(fields: [criterionId], references: [id])
  criterionId Int
  score       Float
  grader      GraderType
  confidence  Float?
  comment     String?
  modelVersion String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  @@unique([essayId, criterionId])
}
